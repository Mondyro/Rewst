{"version":2,"exportedAt":"2023-10-06T19:52:19.047271+00:00","signing":{"cert":"-----BEGIN CERTIFICATE-----\nMIICazCCAfGgAwIBAgIUFJtHAR8D+ZfChHcAXHemH7s8zRowCgYIKoZIzj0EAwIwfDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkZMMQ4wDAYDVQQHEwVUYW1wYTEOMAwGA1UEChMFUmV3c3QxEzARBgNVBAsTClJld3N0IERldnMxKzApBgNVBAMTImxvY2FsIFJld3N0IEltcG9ydC9FeHBvcnQgQ0EyIHYxLjEwHhcNMjIwNjAzMTkwMDU1WhcNMjUwNTIzMTkwMTI1WjBDMQswCQYDVQQGEwJVUzELMAkGA1UECBMCRkwxDjAMBgNVBAcTBVRhbXBhMRcwFQYDVQQDEw5sb2NhbC5yZXdzdC5pbzB2MBAGByqGSM49AgEGBSuBBAAiA2IABMcTJzyLIvX1+3545EJbFeNVjahxVq6TFQ7n/IYZs4yEMQzDWZjAyHhJPZk3Dxq/wFzesXMYJu41rhxfz7AZh15LtFGfy9V2B4X5KH7sGJWqOan0mabuF83llruTLA/NQaNtMGswDgYDVR0PAQH/BAQDAgeAMB0GA1UdDgQWBBTDePOSC6hckrg6usrK2giZv9GxpjAfBgNVHSMEGDAWgBTojdemsJqfnB19iyMxmIi3OGYw6TAZBgNVHREEEjAQgg5sb2NhbC5yZXdzdC5pbzAKBggqhkjOPQQDAgNoADBlAjEA8NsLnuGhfTPC7dB0ojWf5WmH64qFZuPFD6Q0RwGYO0D1Tn2x5+/37kW3HFcGHV0wAjBM7LSidsc7E9+fmcesnN5hM34eGMP+YWCoEeFIPPANXQKemAgUVf35iXyU64sVEC4=\n-----END CERTIFICATE-----","hash":"sha512","signature":"MGYCMQDaXMmysfM5tuzxY3DUHzH4JRbOzfCXzjU+aWyYYusD5YsBXd01SdIl7J0FdAzfX8MCMQCBwWAh4hg24aPjlAowiImEGs3pijdmh6rmFkqKmSwqk8paIx0pncWFkDMg4u/3/TU="},"objects":{"transition_id:3tiKYPZVjtqZCLPm8RfmvJqjfiQecMebXJoPhEaZPzRZ":{"type":"transition_id","content_hash":"2gRwAjfoA7VtDgPo3LQieHjmdkvnJq8y8SasoYFmdfuj","hash":"76KQwhJZzaSPuufgF9kZLRgQUUh5XsG3urqudGJD9Ln3","fields":{"id":"450a712c-6457-4e13-b86c-aa591a9edef4"}},"workflow_task_id:DkYXTvLi8NJS1tgF1AaKV8Nh8Dh4WDxMpRJMomhhEF4d":{"type":"workflow_task_id","content_hash":"DeewN2wxYh36i7gYoqxCHS55msedcTXn8yzuvKkifoFa","hash":"pK32frQtcWVre76kM1jsqDfdfQqoqmv1KG4orWJ9Wq8","fields":{"id":"1abcf03a168f45968e1342627b7f289c"}},"transition_id:EVUpEB4FXJw8NYSNABW2vrhWbE4RzucjZX2dJyJu45Ri":{"type":"transition_id","content_hash":"6UWGtknZgQymVVHVaRozuyBqWdw4awTxb8uvqUT2gq3i","hash":"DZKdS4vDwY5WBMEVYurd6j5JgHnb9ErsRKSF8Vimvi7r","fields":{"id":"cc9c2f00-226f-40ed-991b-24a2d205e111"}},"workflow_task_id:AzFuiEWCq7zX1oyn3rn5RbcbPtMs4boUgDYyibHLBaBS":{"type":"workflow_task_id","content_hash":"3iHEGuaEuKUBGVF1TAV4QJvcX1DC1vgTYAZ1sV7PnErx","hash":"BP5Q6AYh5gsQJEx8731BChH6kdEFHhbd7NF4cFavvsBR","fields":{"id":"17b5cdae5b4d4f8badbe45feba02fb21"}},"transition_id:3M8JcA1tVPg5G3Gw67oQvBkfqSq6wnyRdCLWcCgv2Zky":{"type":"transition_id","content_hash":"781F1JiuKYJDRBCGbS9B4xt2ZtqABehjFr43m7xkqBEh","hash":"6JvCzw9sriqA4dBLc2KWKfncK5e5itVE4Bh2XXEeMpU1","fields":{"id":"99303a75-9167-4321-a688-1755de69b6cd"}},"workflow_task_id:EtETdrD6M3sNCKhPbQRp8tVRaNavTQqRt1D6Rx1FVQu5":{"type":"workflow_task_id","content_hash":"CVAnazYBSYiB4GgD1aytG9G2aDSmafhoABFdYR3kHq57","hash":"EUt2HTih7oBYaNcaKvC3CfSGkPraQeRUcpf3HLbfSHxG","fields":{"id":"c11d51fea49f4e0b8799cb3f7c066658"}},"transition_id:AR5ThgrGUfD8Fq47iX2Zcnf2nzjcubrKJaexWuN7vfSY":{"type":"transition_id","content_hash":"9qYiLWzr6eeio9DPcXrFqvaw2vk2WCCqSXrCvZMzx8Wt","hash":"3shUdyXtXCuyBWpGTQUdAvF1dKQf73tz4nDRdmR4LYxh","fields":{"id":"9f5a0305-0ff4-404f-b51c-d3b3d2806cd4"}},"action:Lx6LYFrbeMmramaoD8jWp9kuoRSMtJpohEaLfDWr6AX":{"type":"action","content_hash":"FMu3hsNV7SdbaFHCpQXe4YsxtfRZHq3LfQ8Ej6uv322w","hash":"CDXNu8XJkn4bBRzcx18z5UYnjXiUM2WB6hTMAwGhMQ4K","fields":{"ref":"core.http_request"}},"transition_id:3eRuoCLsanHHdSYj3DJjLUQk6adL3ggM4ieakdhpJNQS":{"type":"transition_id","content_hash":"6ACFXeLBLemENyDStxzkgyEkMjMZWxGGiDs15fYBx121","hash":"CGXCjoEoxvZbqk1sEyQdmVSS4FzPnqaqCciY9Wy83u17","fields":{"id":"fa7802ba-c530-44b6-8ce5-95680a4ac9df"}},"transition_id:Fmh2HgmexecqyqdyULJ9x3HftfqDq1oYZKYUZJYr8mex":{"type":"transition_id","content_hash":"Cm7jJBAi1Zkr2T6TkhjAHoCZSnQFzYb9wRiL7pnbNrRn","hash":"BQ1rDbsyqrAcfnJLejyMpgpYucDJnFqFEgN3qGQ68xAj","fields":{"id":"8a856fa1-274d-4174-8ee2-cc16dcdf0cca"}},"workflow_task_id:9CcRjV8mDzhWTrvWJusQ629qEUu9cu8NY8RqqzbPYKqf":{"type":"workflow_task_id","content_hash":"6c9H8pe7WQUTkUMiKy2Ry115iaV1iNGES8AA8vdEpNqg","hash":"5LJkCWCgHaPPjmHwYRefcEZgSiGXfCLH6APpehgcehCX","fields":{"id":"cf15bda1b0db497db5ebd6cae9882af3"}},"workflow_task_id:91F4HbixpgjNE2eqj8EkkroRM3HZU3xWQJk1jJREwg1v":{"type":"workflow_task_id","content_hash":"E7wZKPwnPasmj1gTiwaQXEFGFaaCWPhtCJLNcwmyGXEE","hash":"3ACc2zhxdmejE591n7goVqzXVYtxRtpBVB9vcRiT8TBw","fields":{"id":"0fc6a694ac7943e58e3020e7b2c6e62f"}},"transition_id:AfZVFdsDrHkq7rMVtfcjzZSs3LFyL42RJNUfMVUeuugF":{"type":"transition_id","content_hash":"3jPQe4uAAL7rzdC5Rb3jRr2Zaw4aU7L2P3SAxbCRvuLJ","hash":"BF9N61nLDfiuf74QFYTtZi8HCsqCk6TJnvy9LSPwyYxp","fields":{"id":"c020ac97-d0cb-48ab-aa31-1fb514ecfaf4"}},"action:G66MfLiKJNYcHwVLHXvX7gr7EUExp3sd6DQawHVDqF8o":{"type":"action","content_hash":"CdPL6KHuhM7mBvTHi4QnQbxCitnoxuRrq1BfHNnQYzKB","hash":"Arr2RCEM96WqU2EkvigszSfsW9GZHa4HJC5a1fL9qZ5g","fields":{"ref":"core.noop"}},"transition_id:JD8BKEuZM3uHVENTu5RXkgnte5pnMvZ5EXyua5BhkZD7":{"type":"transition_id","content_hash":"Etj7ZRJWsQocyHPeGAPD5traxZf9xjTrYvmuB7bx6QdL","hash":"GGqh4LHCYZ3DswqkSKQj4Sa9aBbFLyByRYB6CJXQgMAQ","fields":{"id":"3e4796e4-b50d-43d7-9827-ac8dc3331275"}},"transition_id:4uA1a7U5VMbnroPa6uFB9ENZfvUPtdGKwKCjZVp16YEg":{"type":"transition_id","content_hash":"5Znme4QB6xtc7xV6LPA6Kvi7iNxFVyAVe2q1QMsADwSx","hash":"3nLEcGdZGpCWDNuZPGPsFi3UyDicpVLW6k2Lve6sdREz","fields":{"id":"ec38b36c-7edf-4ed1-aeec-36c6653f2ad0"}},"workflow_task_id:72MQZM81csS2csT5eFJ9oiQvkhApRc4nPAjweVZwDoQs":{"type":"workflow_task_id","content_hash":"5Gjiui29ozXbHmwsaJDcgxdJsUo5ypemrBJC2aRtTDvy","hash":"DfgoZEJvA3WswdqcXG6vxidriu6FBLiXxKECP6ro92Wf","fields":{"id":"5798168c32d540e7a0d29721bac7b37d"}},"workflow_task_id:3ZgfvvyVhcXKvJ9bJGLBMLZayb89Bi8YmLRaTjNJeRmN":{"type":"workflow_task_id","content_hash":"5DTyRJWJkh3oDNGvAs1xePHvbTXoXpUyMVBEPnwszmhq","hash":"9ozHWP6z3NGXYKKrvfqBSYEXmzbcuiigYY2vVQkCvuLU","fields":{"id":"0bf06ac4533d442f9a573dfc0359ddbd"}},"workflow:E7Ng4YEGr6moTBo14WEWBaCRH2kX6j7Gd3nqqNSZntTX":{"type":"workflow","content_hash":"5bJeknY89eMk85k2wywTUExZb6VR28TBpp71Wsv3T1gd","hash":"GF9wtQzjLmMhX9kBUapcQbbcXBC4VXw55aLSvdLQhSnS","fields":{"humanSecondsSaved":0,"notes":[],"output":[{"web_workflowExecution":"{{CTX.web_workflowExecution|d}}"}],"parameters":{},"tasks":[{"id":"@@@workflow_task_id_ref1@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Execution_Summary","next":[{"do":["@@@workflow_task_id_ref4@@@"],"from":null,"id":"@@@transition_id_ref1@@@","publish":[{"key":"rewst_context","value":"https://app.rewst.io/organizations/6abfb4f3-241c-4522-ae38-e0b468ea9c1b/results/e2dcbf65-6bec-4784-9640-8ae7326d5687"}],"to":null,"when":"{{ SUCCEEDED }}"},{"do":[],"from":null,"id":"@@@transition_id_ref2@@@","publish":[],"to":null,"when":"{{ FAILED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref2@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Check_If_Template","next":[{"do":["@@@workflow_task_id_ref5@@@"],"from":null,"id":"@@@transition_id_ref3@@@","publish":[],"to":null,"when":"{{CTX.isNotTemplate|d}}"},{"do":["@@@workflow_task_id_ref7@@@"],"from":null,"id":"@@@transition_id_ref4@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_FIRST","with":null},{"id":"@@@workflow_task_id_ref3@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Create_Rewst_Actions","next":[{"do":[],"from":null,"id":"@@@transition_id_ref5@@@","publish":[{"key":"RewstActions","value":"{%- set arrays=[] -%}\r\n{%- set include_vars = CTX.include_vars | d -%}\r\n{%- set include_vars = CTX.include_vars | d -%}\r\n{%- set ignore_vars = CTX.ignore_vars | d -%}\r\n{%- set One_Result = CTX.One_Result | d -%}\r\n{%- set OneResult = [] -%}\r\n{%- set default_vars = CTX.default_excludes | d -%}\r\n{%- set input = CTX.web_workflowExecution -%}\r\n{%- set input_fields_array=[] -%}\r\n{%- set input_fields_count = input.keys()|list|length-%}\r\n{%- set input_fields = input -%}\r\n{%- set input_field_pairs = input_fields|dictsort-%}\r\n{%- set json_count = input|count -%}\r\n{%- if default_vars != \"\" -%}\r\n    {%- set default_vars = default_vars|lower|replace(' ','') -%}\r\n    {%- if \",\" in default_vars -%}\r\n        {%- set default_vars = default_vars.split(',') -%}\r\n    {%- else -%}\r\n        {%- set default_vars = [default_vars] -%}\r\n    {%- endif -%}\r\n{%- endif -%}\r\n{%- if ignore_vars != \"\" -%}\r\n    {%- set ignore_vars = ignore_vars|lower|replace(' ','') -%}\r\n    {%- if \",\" in ignore_vars -%}\r\n        {%- set ignore_vars = ignore_vars.split(',') -%}\r\n    {%- else -%}\r\n        {%- set ignore_vars = [ignore_vars] -%}\r\n    {%- endif -%}\r\n{%- endif -%}\r\n{%- if include_vars != \"\" -%}\r\n    {%- set include_vars = include_vars|lower|replace(' ','') -%}\r\n    {%- if \",\" in include_vars -%}\r\n        {%- set include_vars = include_vars.split(',') -%}\r\n    {%- else -%}\r\n        {%- set include_vars = [include_vars] -%}\r\n    {%- endif -%}\r\n{%- endif -%}\r\n{%- for key in range(0,input_fields_count) -%}\r\n    {%- if input_field_pairs[key][0] is not in default_vars -%}\r\n        {%- set tmp = input_fields_array.append({\"key\":input_field_pairs[key][0],\"value\":input_field_pairs[key][1]}) -%}\r\n    {%- endif -%}\r\n{%- endfor -%}\r\n{%- for jkey in range(1,json_count) -%}\r\n    {%- for value in input[jkey] -%}\r\n        {%- if value is iterable -%}\r\n            {%- if value is not in ignore_vars|d and value is not in default_vars|d and value is not in OneResult|d -%}\r\n                {%- set preaction= {\"type\":\"TASK\",\"data\":{\"input\":{},\"retry\":null,\"with\":null,\"join\":0,\"isMocked\":false,\"mockInput\":{\"mock_result\":{}},\"timeout\":600,\"transitionMode\":\"FOLLOW_ALL\",\"publishResultAs\":\"\",\"runAsOrgId\":\"\",\"humanSecondsSaved\":0,\"__typename\":\"WorkflowTask\",\"id\":\"5dbec4ac066143498ef31c1302402a9b\",\"name\":value,\"description\":\"Action that does nothing\",\"actionId\":\"cf6cc66e-a149-4f06-82f5-59f4d72ba93e\",\"action\":{\"__typename\":\"Action\",\"id\":\"cf6cc66e-a149-4f06-82f5-59f4d72ba93e\",\"name\":\"noop\",\"defaultHumanSecondsSaved\":0,\"description\":\"Action that does nothing\",\"parameters\":{},\"ref\":\"core.noop\",\"icon\":null,\"workflow\":null,\"pack\":{\"__typename\":\"Pack\",\"id\":\"79e0db69-f801-4a61-ba1f-0aa472038528\",\"name\":\"Core\",\"ref\":\"core\"},\"outputSchema\":{},\"deprecated\":false,\"deprecationMessage\":\"\",\"enabled\":true,\"runner\":{\"__typename\":\"Runner\",\"name\":\"noop\"}},\"metadata\":{\"x\":1914.7,\"y\":311},\"next\":[{\"do\":[],\"when\":\"\",\"label\":\"\",\"publish\":[{\"key\":value,\"value\":input[jkey][value]}],\"id\":\"31529ba4-152e-4724-a6fa-36b94357f3d4\",\"__typename\":\"WorkflowTransition\"}],\"workflowId\":\"a3dcb91d-8c6f-4e81-8229-e8568a975aee\",\"securitySchema\":{\"redact\":{\"input\":[],\"result\":[]}},\"packOverrides\":[]}} -%}\r\n                {%- set tmp = arrays.append({'Name':value,'Result':input[jkey],'Rewst_Action':preaction|json_stringify }) -%}\r\n            {%- endif -%}\r\n        {%- endif -%}\r\n    {%- endfor -%}\r\n{%- endfor -%}\r\n{%- set include_found = [] -%}\r\n{%- for include in include_vars -%}\r\n{%- set include_found = [] -%}\r\n    {%- for rkey in range(json_count-1,-1,-1) -%}\r\n        {%- for value in input[rkey] -%}\r\n            {%- if value|string|lower ==include-%}\r\n                {%- set tmp = include_found.append([rkey]) -%}\r\n            {%- endif -%}\r\n        {%- endfor -%}\r\n    {%- endfor -%}\r\n{%- set tmp = input_fields_array.append({\"key\":include,\"value\":input[include_found[0]|join|int][include]}) -%}\r\n{%- endfor -%}\r\n{%- set preaction= {\"type\":\"TASK\",\"data\":{\"input\":{},\"retry\":null,\"with\":null,\"join\":0,\"isMocked\":false,\"mockInput\":{\"mock_result\":{}},\"timeout\":600,\"transitionMode\":\"FOLLOW_ALL\",\"publishResultAs\":\"\",\"runAsOrgId\":\"\",\"humanSecondsSaved\":0,\"__typename\":\"WorkflowTask\",\"id\":\"5dbec4ac066143498ef31c1302402a9b\",\"name\":\"Execution_Details\",\"description\":\"Action that does nothing\",\"actionId\":\"cf6cc66e-a149-4f06-82f5-59f4d72ba93e\",\"action\":{\"__typename\":\"Action\",\"id\":\"cf6cc66e-a149-4f06-82f5-59f4d72ba93e\",\"name\":\"noop\",\"defaultHumanSecondsSaved\":0,\"description\":\"Action that does nothing\",\"parameters\":{},\"ref\":\"core.noop\",\"icon\":null,\"workflow\":null,\"pack\":{\"__typename\":\"Pack\",\"id\":\"79e0db69-f801-4a61-ba1f-0aa472038528\",\"name\":\"Core\",\"ref\":\"core\"},\"outputSchema\":{},\"deprecated\":false,\"deprecationMessage\":\"\",\"enabled\":true,\"runner\":{\"__typename\":\"Runner\",\"name\":\"noop\"}},\"metadata\":{\"x\":1914.7,\"y\":311},\"next\":[{\"do\":[],\"when\":\"\",\"label\":\"\",\"publish\":input_fields_array,\"id\":\"31529ba4-152e-4724-a6fa-36b94357f3d4\",\"__typename\":\"WorkflowTransition\"}],\"workflowId\":\"a3dcb91d-8c6f-4e81-8229-e8568a975aee\",\"securitySchema\":{\"redact\":{\"input\":[],\"result\":[]}},\"packOverrides\":[]}} -%}\r\n{%- set tmp = arrays.append({'Name':'Execution_Details','Result':input_fields_array|flatten,'Rewst_Action':preaction|json_stringify }) -%}\r\n{{arrays}}"}],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref4@@@","action":{"id":"@@@action_ref2@@@"},"humanSecondsSaved":0,"input":{"url":"https://api.rewst.io/graphql","body":"{# set url = 'https://app.rewst.io/jinja-live-editor?id=4ff8580d-2241-41b5-a106-16aa09c7159a' #}\r\n{% set url = CTX.rewst_context %}\r\n{% set match = url|regex_search('jinja-live-editor') %}\r\n{% if match %}\r\n{% set id_match = url|regex_findall('\\?id=([^&]+)') %}\r\n{\r\n    \"operationName\": \"getTemplate\",\r\n    \"variables\": {\r\n        \"id\": \"{{ id_match|join }}\"\r\n    },\r\n    \"query\": \"query getTemplate($id: ID!) {\\n  template: jinjaTemplate(where: {id: $id}) {\\n    body\\n    context\\n    orgId\\n    permission {\\n      authorizedForOrganizations {\\n        id\\n        name\\n        __typename\\n      }\\n      roleIds\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"\r\n}\r\n{% else %}\r\n{% set match2 = url|regex_search('/results/') %}\r\n{% if match2 %}\r\n{% set id_match = url|regex_findall('/results/([^&]+)') %}\r\n{\r\n    \"operationName\": \"getExecutionConductor\",\r\n    \"variables\": {\r\n        \"id\": \"{{ id_match|join }}\"\r\n    },\r\n    \"query\": \"query getExecutionConductor($id: ID!) {\\n  workflowExecution(where: {id: $id}) {\\n    id\\n    conductor {\\n      output\\n      input\\n      errors\\n      state {\\n        contexts\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"\r\n}\r\n{% endif %}\r\n{% endif %}","json":null,"files":[],"method":"POST","params":null,"cookies":null,"headers":{"cookie":"{{ ORG.VARIABLES.rewst_workflow_execution_result }}","Content-Type":"application/json"},"timeout":5,"auth_password":null,"auth_username":null,"allow_redirects":null,"require_2xx_status":true},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Rewst_Execution_Results","next":[{"do":["@@@workflow_task_id_ref2@@@"],"from":null,"id":"@@@transition_id_ref6@@@","publish":[{"key":"One_Result","value":"true"},{"key":"Hide_WF_CTX","value":"true"},{"key":"include_vars","value":"list,max,index"},{"key":"ignore_vars","value":"index"},{"key":"default_excludes","value":"rewst,trigger_instance,trigger,trigger_id,sentry_trace,originating_execution_id,execution_id"},{"key":"web_workflowExecution","value":"{%- set url = (result.result.data.data|string|replace('{{','{')|replace('}}','}')) -%}\r\n{%- set url = url[:500] -%}\r\n{%- set match = url|regex_search(\"{'template':\") -%}\r\n{%- if match -%}\r\n{%- set output = result.result.data.data.template.context -%}\r\n{{- output -}}\r\n{%- else -%}\r\n{%- set match2 = url|regex_search(\"{'workflowExecution':\") -%}\r\n{%- if match2 -%}\r\n{#- set output = result.result.data.data.workflowExecution.conductor.state.contexts-#}\r\n{%- set output = []-%}\r\n{%- set tmp = output.append({'contexts':(result.result.data.data.workflowExecution.conductor.state.contexts if CTX.Hide_WF_CTX|d != \"true\") or \"One Result\",'errors':result.result.data.data.workflowExecution.conductor.errors, 'input':result.result.data.data.workflowExecution.conductor.input}) -%}\r\n{{- output -}}\r\n{%- endif -%}\r\n{%- endif -%}"},{"key":"isNotTemplate","value":"{%- set url = (result.result.data.data|string|replace('{{','pyx')) -%}\r\n{%- set url = url[:500] -%}\r\n{%- set match2 = url|regex_search(\"{'workflowExecution':\") -%}\r\n{%- if match2 -%}\r\n{#- set output = result.result.data.data.workflowExecution.conductor.state.contexts-#}\r\n{%- set output = true -%}\r\n{{- output -}}\r\n{%- endif -%}"}],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref5@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Count_Actions","next":[{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref7@@@","publish":[{"key":"CountsAsDict","value":"{%- set arrays=[] -%}\r\n{%- set include_vars = CTX.include_vars | d -%}\r\n{%- set ignore_vars = CTX.ignore_vars | d -%}\r\n{%- set default_vars = CTX.default_excludes | d -%}\r\n{%- set input = TASKS.Rewst_Execution_Results.result.result.data.data.workflowExecution.conductor.state.contexts -%}\r\n{%- set split_input = [] -%}\r\n{#- Iterate through the input list and split objects -#}\r\n{%- for item in input -%}\r\n    {%- for key, value in item.items() -%}\r\n        {%- do split_input.append({key: value}) -%}\r\n    {%- endfor -%}\r\n{%- endfor -%}\r\n{#- Output the split input as a JSON array\r\n{{ split_input|tojson(indent=2) }} -#}\r\n{%- set input = split_input -%}\r\n{%- set counts = {} -%}\r\n\r\n{%- set items = [] -%}\r\n\r\n{#- Flatten the nested dictionaries and collect string values -#}\r\n{%- for item in input -%}\r\n    {%- for key, value in item.items() -%}\r\n            {%- set _ = items.append(key) -%}\r\n    {%- endfor -%}\r\n{%- endfor -%}\r\n\r\n{#- Count occurrences of each item -#}\r\n{%- set counts = {} -%}\r\n{%- for item in items -%}\r\n    {%- if item in counts -%}\r\n        {%- set _ = counts.update({item: counts[item] + 1}) -%}\r\n    {%- else -%}\r\n        {%- set _ = counts.update({item: 1}) -%}\r\n    {%- endif -%}\r\n{%- endfor -%}\r\n\r\n{#- Export counts as a list of dictionary pairs -#}\r\n{%- set counts_as_pairs = {} -%}\r\n{%- for item, count in counts.items() -%}\r\n    {%- set _ = counts_as_pairs.update({item: count}) -%}\r\n{%- endfor -%}\r\n\r\n{{- counts_as_pairs -}}"}],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref6@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Create_Rewst_Actions","next":[{"do":[],"from":null,"id":"@@@transition_id_ref8@@@","publish":[{"key":"RewstActions","value":"{%- set arrays=[] -%}\r\n{%- set include_vars = CTX.include_vars | d -%}\r\n{%- set include_vars = CTX.include_vars | d -%}\r\n{%- set ignore_vars = CTX.ignore_vars | d -%}\r\n{%- set One_Result = CTX.One_Result | d -%}\r\n{%- set OneResult = [] -%}\r\n{%- set default_vars = CTX.default_excludes | d -%}\r\n{%- set input = TASKS.Rewst_Execution_Results.result.result.data.data.workflowExecution.conductor.state.contexts -%}\r\n{%- set split_input = [] -%}\r\n{# Iterate through the input list and split objects #}\r\n{%- for item in input -%}\r\n    {%- for key, value in item.items() -%}\r\n        {%- do split_input.append({key: value}) -%}\r\n    {%- endfor -%}\r\n{%- endfor -%}\r\n{# Output the split input as a JSON array\r\n{{ split_input|tojson(indent=2) }}#}\r\n{%- set input_fields_array=[] -%}\r\n{%- set input_fields_count = input[0].keys()|list|length-%}\r\n{%- set input_fields = input[0] -%}\r\n{%- set input_field_pairs = input_fields|dictsort-%}\r\n{%- set input = split_input -%}\r\n{%- set json_count = input|count -%}\r\n{%- if default_vars != \"\" -%}\r\n    {%- set default_vars = default_vars|lower|replace(' ','') -%}\r\n    {%- if \",\" in default_vars -%}\r\n        {%- set default_vars = default_vars.split(',') -%}\r\n    {%- else -%}\r\n        {%- set default_vars = [default_vars] -%}\r\n    {%- endif -%}\r\n{%- endif -%}\r\n{%- if ignore_vars != \"\" -%}\r\n    {%- set ignore_vars = ignore_vars|lower|replace(' ','') -%}\r\n    {%- if \",\" in ignore_vars -%}\r\n        {%- set ignore_vars = ignore_vars.split(',') -%}\r\n    {%- else -%}\r\n        {%- set ignore_vars = [ignore_vars] -%}\r\n    {%- endif -%}\r\n{%- endif -%}\r\n\r\n{#- This will look if any items have more then 5 dupes -#}\r\n{%- if One_Result|lower == \"true\" and One_Result != \"\"-%}\r\n    {%- for key, value in CTX.CountsAsDict.items() -%}\r\n    {%- set keyCountsAsDictOver5 = [] -%}\r\n        {%- if value > 3 and key is not in ignore_vars-%}\r\n            {%- set keyCountsAsDictOver5 = key -%}\r\n        {%- endif -%}\r\n        {%- if keyCountsAsDictOver5 != [] -%}\r\n            {%- set tmp = OneResult.append(keyCountsAsDictOver5) -%}\r\n        {%- endif -%}\r\n    {%- endfor -%}\r\n    {%- set last_found = [] -%}\r\n    {%- for include in OneResult -%}\r\n        {%- set last_found = [] -%}\r\n        {%- for rkey in range(json_count-1,-1,-1) -%}\r\n            {%- for value in input[rkey] -%}\r\n                {%- if value|string|lower ==include -%}\r\n                    {%- set tmp = last_found.append([rkey]) -%}\r\n                {%- endif -%}\r\n            {%- endfor -%}\r\n        {%- endfor -%}\r\n        {%- set preaction= {\"type\":\"TASK\",\"data\":{\"input\":{},\"retry\":null,\"with\":null,\"join\":0,\"isMocked\":false,\"mockInput\":{\"mock_result\":{}},\"timeout\":600,\"transitionMode\":\"FOLLOW_ALL\",\"publishResultAs\":\"\",\"runAsOrgId\":\"\",\"humanSecondsSaved\":0,\"__typename\":\"WorkflowTask\",\"id\":\"5dbec4ac066143498ef31c1302402a9b\",\"name\":include,\"description\":\"Action that does nothing\",\"actionId\":\"cf6cc66e-a149-4f06-82f5-59f4d72ba93e\",\"action\":{\"__typename\":\"Action\",\"id\":\"cf6cc66e-a149-4f06-82f5-59f4d72ba93e\",\"name\":\"noop\",\"defaultHumanSecondsSaved\":0,\"description\":\"Action that does nothing\",\"parameters\":{},\"ref\":\"core.noop\",\"icon\":null,\"workflow\":null,\"pack\":{\"__typename\":\"Pack\",\"id\":\"79e0db69-f801-4a61-ba1f-0aa472038528\",\"name\":\"Core\",\"ref\":\"core\"},\"outputSchema\":{},\"deprecated\":false,\"deprecationMessage\":\"\",\"enabled\":true,\"runner\":{\"__typename\":\"Runner\",\"name\":\"noop\"}},\"metadata\":{\"x\":1914.7,\"y\":311},\"next\":[{\"do\":[],\"when\":\"\",\"label\":\"\",\"publish\":[{\"key\":include,\"value\":input[last_found[0]|join|int][include]}],\"id\":\"31529ba4-152e-4724-a6fa-36b94357f3d4\",\"__typename\":\"WorkflowTransition\"}],\"workflowId\":\"a3dcb91d-8c6f-4e81-8229-e8568a975aee\",\"securitySchema\":{\"redact\":{\"input\":[],\"result\":[]}},\"packOverrides\":[]}} -%}\r\n        {%- set tmp = arrays.append({'Name':include,'Result':input[last_found[0]|join|int][include],'Rewst_Action':preaction|json_stringify }) -%}        \r\n    {%- endfor -%}\r\n{%- endif -%}\r\n\r\n{%- if include_vars != \"\" -%}\r\n    {%- set include_vars = include_vars|lower|replace(' ','') -%}\r\n    {%- if \",\" in include_vars -%}\r\n        {%- set include_vars = include_vars.split(',') -%}\r\n    {%- else -%}\r\n        {%- set include_vars = [include_vars] -%}\r\n    {%- endif -%}\r\n{%- endif -%}\r\n{%- for key in range(0,input_fields_count) -%}\r\n    {%- if input_field_pairs[key][0] is not in default_vars -%}\r\n        {%- set tmp = input_fields_array.append({\"key\":input_field_pairs[key][0],\"value\":input_field_pairs[key][1]}) -%}\r\n    {%- endif -%}\r\n{%- endfor -%}\r\n{%- for jkey in range(1,json_count) -%}\r\n    {%- for value in input[jkey] -%}\r\n        {%- if value is iterable -%}\r\n            {%- if value is not in ignore_vars|d and value is not in default_vars|d and value is not in OneResult|d -%}\r\n                {%- set preaction= {\"type\":\"TASK\",\"data\":{\"input\":{},\"retry\":null,\"with\":null,\"join\":0,\"isMocked\":false,\"mockInput\":{\"mock_result\":{}},\"timeout\":600,\"transitionMode\":\"FOLLOW_ALL\",\"publishResultAs\":\"\",\"runAsOrgId\":\"\",\"humanSecondsSaved\":0,\"__typename\":\"WorkflowTask\",\"id\":\"5dbec4ac066143498ef31c1302402a9b\",\"name\":value,\"description\":\"Action that does nothing\",\"actionId\":\"cf6cc66e-a149-4f06-82f5-59f4d72ba93e\",\"action\":{\"__typename\":\"Action\",\"id\":\"cf6cc66e-a149-4f06-82f5-59f4d72ba93e\",\"name\":\"noop\",\"defaultHumanSecondsSaved\":0,\"description\":\"Action that does nothing\",\"parameters\":{},\"ref\":\"core.noop\",\"icon\":null,\"workflow\":null,\"pack\":{\"__typename\":\"Pack\",\"id\":\"79e0db69-f801-4a61-ba1f-0aa472038528\",\"name\":\"Core\",\"ref\":\"core\"},\"outputSchema\":{},\"deprecated\":false,\"deprecationMessage\":\"\",\"enabled\":true,\"runner\":{\"__typename\":\"Runner\",\"name\":\"noop\"}},\"metadata\":{\"x\":1914.7,\"y\":311},\"next\":[{\"do\":[],\"when\":\"\",\"label\":\"\",\"publish\":[{\"key\":value,\"value\":input[jkey][value]}],\"id\":\"31529ba4-152e-4724-a6fa-36b94357f3d4\",\"__typename\":\"WorkflowTransition\"}],\"workflowId\":\"a3dcb91d-8c6f-4e81-8229-e8568a975aee\",\"securitySchema\":{\"redact\":{\"input\":[],\"result\":[]}},\"packOverrides\":[]}} -%}\r\n                {%- set tmp = arrays.append({'Name':value,'Result':input[jkey],'Rewst_Action':preaction|json_stringify }) -%}\r\n            {%- endif -%}\r\n        {%- endif -%}\r\n    {%- endfor -%}\r\n{%- endfor -%}\r\n{%- set include_found = [] -%}\r\n{%- for include in include_vars -%}\r\n{%- set include_found = [] -%}\r\n    {%- for rkey in range(json_count-1,-1,-1) -%}\r\n        {%- for value in input[rkey] -%}\r\n            {%- if value|string|lower ==include-%}\r\n                {%- set tmp = include_found.append([rkey]) -%}\r\n            {%- endif -%}\r\n        {%- endfor -%}\r\n    {%- endfor -%}\r\n{%- set tmp = input_fields_array.append({\"key\":include,\"value\":input[include_found[0]|join|int][include]}) -%}\r\n{%- endfor -%}\r\n{%- if CTX.web_workflowExecution[0].errors|string|replace('{{','{')|replace('}}','}') != 'None' or CTX.web_workflowExecution[0].errors|string|replace('{{','{')|replace('}}','}') != '[]' -%}\r\n    {%- set error = 0 -%}\r\n        {%- for errors in CTX.web_workflowExecution[0].errors -%}\r\n            {%- set error = error + 1 -%}\r\n            {%- set tmp = input_fields_array.append({\"key\":errors.type|string +'_'+ error|string,\"value\":errors.message|replace('{{','{')|replace('}}','}')}) -%}\r\n        {%- endfor -%}\r\n{%- endif -%}\r\n{%- set preaction= {\"type\":\"TASK\",\"data\":{\"input\":{},\"retry\":null,\"with\":null,\"join\":0,\"isMocked\":false,\"mockInput\":{\"mock_result\":{}},\"timeout\":600,\"transitionMode\":\"FOLLOW_ALL\",\"publishResultAs\":\"\",\"runAsOrgId\":\"\",\"humanSecondsSaved\":0,\"__typename\":\"WorkflowTask\",\"id\":\"5dbec4ac066143498ef31c1302402a9b\",\"name\":\"Execution_Details\",\"description\":\"Action that does nothing\",\"actionId\":\"cf6cc66e-a149-4f06-82f5-59f4d72ba93e\",\"action\":{\"__typename\":\"Action\",\"id\":\"cf6cc66e-a149-4f06-82f5-59f4d72ba93e\",\"name\":\"noop\",\"defaultHumanSecondsSaved\":0,\"description\":\"Action that does nothing\",\"parameters\":{},\"ref\":\"core.noop\",\"icon\":null,\"workflow\":null,\"pack\":{\"__typename\":\"Pack\",\"id\":\"79e0db69-f801-4a61-ba1f-0aa472038528\",\"name\":\"Core\",\"ref\":\"core\"},\"outputSchema\":{},\"deprecated\":false,\"deprecationMessage\":\"\",\"enabled\":true,\"runner\":{\"__typename\":\"Runner\",\"name\":\"noop\"}},\"metadata\":{\"x\":1914.7,\"y\":311},\"next\":[{\"do\":[],\"when\":\"\",\"label\":\"\",\"publish\":input_fields_array,\"id\":\"31529ba4-152e-4724-a6fa-36b94357f3d4\",\"__typename\":\"WorkflowTransition\"}],\"workflowId\":\"a3dcb91d-8c6f-4e81-8229-e8568a975aee\",\"securitySchema\":{\"redact\":{\"input\":[],\"result\":[]}},\"packOverrides\":[]}} -%}\r\n{%- set tmp = arrays.append({'Name':'Execution_Details','Result':input_fields_array|flatten,'Rewst_Action':preaction|json_stringify }) -%}\r\n{{arrays}}"}],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref7@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Count_Actions","next":[{"do":["@@@workflow_task_id_ref3@@@"],"from":null,"id":"@@@transition_id_ref9@@@","publish":[{"key":"CountsAsDict","value":"{{ CTX.web_workflowExecution|length }}"}],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null}],"timeout":28800,"type":"STANDARD","varsSchema":{}},"nonfunctional_fields":{"description":"","name":"[HD IT] - Rewst Workflow for Execution Results","tasks[0].description":"Action that does nothing","tasks[0].metadata":{"x":-72,"y":-384},"tasks[0].next[0].label":"","tasks[0].next[1].label":"","tasks[1].description":"Action that does nothing","tasks[1].metadata":{"x":-72,"y":-72},"tasks[1].next[0].label":"","tasks[1].next[1].label":"","tasks[2].description":"Action that does nothing","tasks[2].metadata":{"x":168,"y":264},"tasks[2].next[0].label":"","tasks[3].description":"Working out how to streamline building Rewst Workflows","tasks[3].metadata":{"x":-72,"y":-216},"tasks[3].next[0].label":"","tasks[4].description":"Action that does nothing","tasks[4].metadata":{"x":-240,"y":120},"tasks[4].next[0].label":"","tasks[5].description":"Action that does nothing","tasks[5].metadata":{"x":-240,"y":264},"tasks[5].next[0].label":"","tasks[6].description":"Action that does nothing","tasks[6].metadata":{"x":168,"y":120},"tasks[6].next[0].label":""},"references":{"transition_id_ref6":{"kind":"string","type":"transition_id","src_key_hash":"EVUpEB4FXJw8NYSNABW2vrhWbE4RzucjZX2dJyJu45Ri","content_hash":"6UWGtknZgQymVVHVaRozuyBqWdw4awTxb8uvqUT2gq3i","locations":["tasks[3].next[0].id"]},"transition_id_ref1":{"kind":"string","type":"transition_id","src_key_hash":"JD8BKEuZM3uHVENTu5RXkgnte5pnMvZ5EXyua5BhkZD7","content_hash":"Etj7ZRJWsQocyHPeGAPD5traxZf9xjTrYvmuB7bx6QdL","locations":["tasks[0].next[0].id"]},"workflow_task_id_ref2":{"kind":"string","type":"workflow_task_id","src_key_hash":"91F4HbixpgjNE2eqj8EkkroRM3HZU3xWQJk1jJREwg1v","content_hash":"E7wZKPwnPasmj1gTiwaQXEFGFaaCWPhtCJLNcwmyGXEE","locations":["tasks[1].id","tasks[3].next[0].do[0]"]},"workflow_task_id_ref4":{"kind":"string","type":"workflow_task_id","src_key_hash":"DkYXTvLi8NJS1tgF1AaKV8Nh8Dh4WDxMpRJMomhhEF4d","content_hash":"DeewN2wxYh36i7gYoqxCHS55msedcTXn8yzuvKkifoFa","locations":["tasks[3].id","tasks[0].next[0].do[0]"]},"workflow_task_id_ref6":{"kind":"string","type":"workflow_task_id","src_key_hash":"EtETdrD6M3sNCKhPbQRp8tVRaNavTQqRt1D6Rx1FVQu5","content_hash":"CVAnazYBSYiB4GgD1aytG9G2aDSmafhoABFdYR3kHq57","locations":["tasks[5].id","tasks[4].next[0].do[0]"]},"transition_id_ref8":{"kind":"string","type":"transition_id","src_key_hash":"3tiKYPZVjtqZCLPm8RfmvJqjfiQecMebXJoPhEaZPzRZ","content_hash":"2gRwAjfoA7VtDgPo3LQieHjmdkvnJq8y8SasoYFmdfuj","locations":["tasks[5].next[0].id"]},"transition_id_ref9":{"kind":"string","type":"transition_id","src_key_hash":"3M8JcA1tVPg5G3Gw67oQvBkfqSq6wnyRdCLWcCgv2Zky","content_hash":"781F1JiuKYJDRBCGbS9B4xt2ZtqABehjFr43m7xkqBEh","locations":["tasks[6].next[0].id"]},"transition_id_ref4":{"kind":"string","type":"transition_id","src_key_hash":"AR5ThgrGUfD8Fq47iX2Zcnf2nzjcubrKJaexWuN7vfSY","content_hash":"9qYiLWzr6eeio9DPcXrFqvaw2vk2WCCqSXrCvZMzx8Wt","locations":["tasks[1].next[1].id"]},"transition_id_ref5":{"kind":"string","type":"transition_id","src_key_hash":"Fmh2HgmexecqyqdyULJ9x3HftfqDq1oYZKYUZJYr8mex","content_hash":"Cm7jJBAi1Zkr2T6TkhjAHoCZSnQFzYb9wRiL7pnbNrRn","locations":["tasks[2].next[0].id"]},"transition_id_ref2":{"kind":"string","type":"transition_id","src_key_hash":"3eRuoCLsanHHdSYj3DJjLUQk6adL3ggM4ieakdhpJNQS","content_hash":"6ACFXeLBLemENyDStxzkgyEkMjMZWxGGiDs15fYBx121","locations":["tasks[0].next[1].id"]},"workflow_task_id_ref3":{"kind":"string","type":"workflow_task_id","src_key_hash":"AzFuiEWCq7zX1oyn3rn5RbcbPtMs4boUgDYyibHLBaBS","content_hash":"3iHEGuaEuKUBGVF1TAV4QJvcX1DC1vgTYAZ1sV7PnErx","locations":["tasks[2].id","tasks[6].next[0].do[0]"]},"workflow_task_id_ref7":{"kind":"string","type":"workflow_task_id","src_key_hash":"9CcRjV8mDzhWTrvWJusQ629qEUu9cu8NY8RqqzbPYKqf","content_hash":"6c9H8pe7WQUTkUMiKy2Ry115iaV1iNGES8AA8vdEpNqg","locations":["tasks[6].id","tasks[1].next[1].do[0]"]},"workflow_task_id_ref1":{"kind":"string","type":"workflow_task_id","src_key_hash":"3ZgfvvyVhcXKvJ9bJGLBMLZayb89Bi8YmLRaTjNJeRmN","content_hash":"5DTyRJWJkh3oDNGvAs1xePHvbTXoXpUyMVBEPnwszmhq","locations":["tasks[0].id"]},"action_ref2":{"kind":"string","type":"action","src_key_hash":"Lx6LYFrbeMmramaoD8jWp9kuoRSMtJpohEaLfDWr6AX","content_hash":"FMu3hsNV7SdbaFHCpQXe4YsxtfRZHq3LfQ8Ej6uv322w","locations":["tasks[3].action.id"]},"action_ref1":{"kind":"string","type":"action","src_key_hash":"G66MfLiKJNYcHwVLHXvX7gr7EUExp3sd6DQawHVDqF8o","content_hash":"CdPL6KHuhM7mBvTHi4QnQbxCitnoxuRrq1BfHNnQYzKB","locations":["tasks[0].action.id","tasks[1].action.id","tasks[2].action.id","tasks[4].action.id","tasks[5].action.id","tasks[6].action.id"]},"transition_id_ref7":{"kind":"string","type":"transition_id","src_key_hash":"AfZVFdsDrHkq7rMVtfcjzZSs3LFyL42RJNUfMVUeuugF","content_hash":"3jPQe4uAAL7rzdC5Rb3jRr2Zaw4aU7L2P3SAxbCRvuLJ","locations":["tasks[4].next[0].id"]},"workflow_task_id_ref5":{"kind":"string","type":"workflow_task_id","src_key_hash":"72MQZM81csS2csT5eFJ9oiQvkhApRc4nPAjweVZwDoQs","content_hash":"5Gjiui29ozXbHmwsaJDcgxdJsUo5ypemrBJC2aRtTDvy","locations":["tasks[4].id","tasks[1].next[0].do[0]"]},"transition_id_ref3":{"kind":"string","type":"transition_id","src_key_hash":"4uA1a7U5VMbnroPa6uFB9ENZfvUPtdGKwKCjZVp16YEg","content_hash":"5Znme4QB6xtc7xV6LPA6Kvi7iNxFVyAVe2q1QMsADwSx","locations":["tasks[1].next[0].id"]}},"dependencies":["transition_id:3tiKYPZVjtqZCLPm8RfmvJqjfiQecMebXJoPhEaZPzRZ","workflow_task_id:DkYXTvLi8NJS1tgF1AaKV8Nh8Dh4WDxMpRJMomhhEF4d","transition_id:EVUpEB4FXJw8NYSNABW2vrhWbE4RzucjZX2dJyJu45Ri","workflow_task_id:AzFuiEWCq7zX1oyn3rn5RbcbPtMs4boUgDYyibHLBaBS","workflow_task_id:3ZgfvvyVhcXKvJ9bJGLBMLZayb89Bi8YmLRaTjNJeRmN","workflow_task_id:EtETdrD6M3sNCKhPbQRp8tVRaNavTQqRt1D6Rx1FVQu5","action:G66MfLiKJNYcHwVLHXvX7gr7EUExp3sd6DQawHVDqF8o","transition_id:AR5ThgrGUfD8Fq47iX2Zcnf2nzjcubrKJaexWuN7vfSY","action:Lx6LYFrbeMmramaoD8jWp9kuoRSMtJpohEaLfDWr6AX","transition_id:3eRuoCLsanHHdSYj3DJjLUQk6adL3ggM4ieakdhpJNQS","transition_id:Fmh2HgmexecqyqdyULJ9x3HftfqDq1oYZKYUZJYr8mex","workflow_task_id:91F4HbixpgjNE2eqj8EkkroRM3HZU3xWQJk1jJREwg1v","transition_id:AfZVFdsDrHkq7rMVtfcjzZSs3LFyL42RJNUfMVUeuugF","workflow_task_id:9CcRjV8mDzhWTrvWJusQ629qEUu9cu8NY8RqqzbPYKqf","transition_id:JD8BKEuZM3uHVENTu5RXkgnte5pnMvZ5EXyua5BhkZD7","transition_id:4uA1a7U5VMbnroPa6uFB9ENZfvUPtdGKwKCjZVp16YEg","workflow_task_id:72MQZM81csS2csT5eFJ9oiQvkhApRc4nPAjweVZwDoQs","transition_id:3M8JcA1tVPg5G3Gw67oQvBkfqSq6wnyRdCLWcCgv2Zky"]}},"__typename":"ExportBundle"}